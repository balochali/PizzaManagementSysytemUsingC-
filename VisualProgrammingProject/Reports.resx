<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQQAAADtCAYAAABZNAv0AAAABGdBTUEAALGOfPtRkwAAACBjSFJNAAB6
        JQAAgIMAAPn/AACA6QAAdTAAAOpgAAA6mAAAF2+SX8VGAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAYdklE
        QVR4Xu2dv6sdR5qGJ1qGuZE2WiViowXDoGBRIhjMjSYyYiMFg4INFAz6A4SCAQcDglVkM5EisWBwMGAY
        FCzOPJEiM5ElcHL+FE99rTp3+x69597uft/qrqp+H3joq8++0jnd9VVX16/+1S+//GKttYMwaK3dpzBo
        rd2nMGit3acwaK3dpzBord2nMGit3acwaK3dpzBord2nMGit3acwyGi25ccff/zX77///j+++eab3718
        +fIPL168+OPTp0//9MUXX/zl4cOH396/f/9v9+7d+/vdu3ffXVxc/JR+5RDHO3fu/CPin3322f89ePDg
        r5eXl28eP378P8+ePXv+5Zdf/vdXX331X999991//vDDD//+/v3733z818wWoLxTCYOMpjyR9MeEf/To
        0deRyCl8GBkXoqRX/1ZUMFHhRIURFdHPP//8LyluCoLyTiUMMhotkfxv3ry5jKRLf1wz6Zc6fL5ojUTr
        5O3bt79NfzZCUN6phEFGwxEVQNxtP//88/9Nf6w9+ac4fId4LIlKLR470p8NAco7lTDIaOYTd9GTFsA4
        oXpz+I7xmBOPPFEBpj+bGaC8UwmDjGYacaeMjr704x4qgZscvn88XrhymAbKO5UwyGjOEy2B6LlPP+69
        EjjncF5iVMMjGedBeacSBhnNdaLXPQp4+tGVwDwPMQQaoynpZzMC5Z1KGGQ0H4nWQIzlpx9dCXAOFenz
        58+feUjzIyjvVMIg496JEYJ0cGugjIeoZGNyVPp5t6C8UwmDjHvFjwWreojZlDERKv28O1DeqYRBxr0R
        Tdl0cEWwjYeYcr23uQ0o71TCIONecIugKg+xNmMvLQaUdyphkLF3Xr9+/ft0cEVQp8OU6d7nM6C8UwmD
        jL2S7z6uCNrw8OTJkz+nY5egvFMJg4w9MppROC50tXusvK6MlYnxXWKadCxrRkYiRU8+WEEZon+nVofP
        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
</value>
  </data>
</root>