#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VisualProgrammingProject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ClassicPizza")]
	public partial class PizzaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPizzaFlavour(PizzaFlavour instance);
    partial void UpdatePizzaFlavour(PizzaFlavour instance);
    partial void DeletePizzaFlavour(PizzaFlavour instance);
    partial void InsertStarter(Starter instance);
    partial void UpdateStarter(Starter instance);
    partial void DeleteStarter(Starter instance);
    partial void InsertBurgerNBrost(BurgerNBrost instance);
    partial void UpdateBurgerNBrost(BurgerNBrost instance);
    partial void DeleteBurgerNBrost(BurgerNBrost instance);
    partial void InsertRollNSandwich(RollNSandwich instance);
    partial void UpdateRollNSandwich(RollNSandwich instance);
    partial void DeleteRollNSandwich(RollNSandwich instance);
    partial void InsertSaladNPasta(SaladNPasta instance);
    partial void UpdateSaladNPasta(SaladNPasta instance);
    partial void DeleteSaladNPasta(SaladNPasta instance);
    partial void InsertDeal(Deal instance);
    partial void UpdateDeal(Deal instance);
    partial void DeleteDeal(Deal instance);
    #endregion
		
		public PizzaDataContext() : 
				base(global::VisualProgrammingProject.Properties.Settings.Default.ClassicPizzaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PizzaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PizzaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PizzaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PizzaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PizzaFlavour> PizzaFlavours
		{
			get
			{
				return this.GetTable<PizzaFlavour>();
			}
		}
		
		public System.Data.Linq.Table<Starter> Starters
		{
			get
			{
				return this.GetTable<Starter>();
			}
		}
		
		public System.Data.Linq.Table<BurgerNBrost> BurgerNBrosts
		{
			get
			{
				return this.GetTable<BurgerNBrost>();
			}
		}
		
		public System.Data.Linq.Table<RollNSandwich> RollNSandwiches
		{
			get
			{
				return this.GetTable<RollNSandwich>();
			}
		}
		
		public System.Data.Linq.Table<SaladNPasta> SaladNPastas
		{
			get
			{
				return this.GetTable<SaladNPasta>();
			}
		}
		
		public System.Data.Linq.Table<Deal> Deals
		{
			get
			{
				return this.GetTable<Deal>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PizzaFlavour")]
	public partial class PizzaFlavour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_No;
		
		private string _Pizza_Flavour;
		
		private int _Quantity;
		
		private string _Size;
		
		private System.Nullable<double> _Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_NoChanging(int value);
    partial void OnOrder_NoChanged();
    partial void OnPizza_FlavourChanging(string value);
    partial void OnPizza_FlavourChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    #endregion
		
		public PizzaFlavour()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order No]", Storage="_Order_No", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_No
		{
			get
			{
				return this._Order_No;
			}
			set
			{
				if ((this._Order_No != value))
				{
					this.OnOrder_NoChanging(value);
					this.SendPropertyChanging();
					this._Order_No = value;
					this.SendPropertyChanged("Order_No");
					this.OnOrder_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Pizza Flavour]", Storage="_Pizza_Flavour", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Pizza_Flavour
		{
			get
			{
				return this._Pizza_Flavour;
			}
			set
			{
				if ((this._Pizza_Flavour != value))
				{
					this.OnPizza_FlavourChanging(value);
					this.SendPropertyChanging();
					this._Pizza_Flavour = value;
					this.SendPropertyChanged("Pizza_Flavour");
					this.OnPizza_FlavourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(50)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Starters")]
	public partial class Starter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_No;
		
		private int _Quantity;
		
		private string _Starter_Name;
		
		private int _Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_NoChanging(int value);
    partial void OnOrder_NoChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnStarter_NameChanging(string value);
    partial void OnStarter_NameChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    #endregion
		
		public Starter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order No]", Storage="_Order_No", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_No
		{
			get
			{
				return this._Order_No;
			}
			set
			{
				if ((this._Order_No != value))
				{
					this.OnOrder_NoChanging(value);
					this.SendPropertyChanging();
					this._Order_No = value;
					this.SendPropertyChanged("Order_No");
					this.OnOrder_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Starter Name]", Storage="_Starter_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Starter_Name
		{
			get
			{
				return this._Starter_Name;
			}
			set
			{
				if ((this._Starter_Name != value))
				{
					this.OnStarter_NameChanging(value);
					this.SendPropertyChanging();
					this._Starter_Name = value;
					this.SendPropertyChanged("Starter_Name");
					this.OnStarter_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BurgerNBrost")]
	public partial class BurgerNBrost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_No;
		
		private int _Quantity;
		
		private string _Item_Name_;
		
		private int _Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_NoChanging(int value);
    partial void OnOrder_NoChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnItem_Name_Changing(string value);
    partial void OnItem_Name_Changed();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    #endregion
		
		public BurgerNBrost()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order No]", Storage="_Order_No", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_No
		{
			get
			{
				return this._Order_No;
			}
			set
			{
				if ((this._Order_No != value))
				{
					this.OnOrder_NoChanging(value);
					this.SendPropertyChanging();
					this._Order_No = value;
					this.SendPropertyChanged("Order_No");
					this.OnOrder_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Item Name ]", Storage="_Item_Name_", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Item_Name_
		{
			get
			{
				return this._Item_Name_;
			}
			set
			{
				if ((this._Item_Name_ != value))
				{
					this.OnItem_Name_Changing(value);
					this.SendPropertyChanging();
					this._Item_Name_ = value;
					this.SendPropertyChanged("Item_Name_");
					this.OnItem_Name_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RollNSandwich")]
	public partial class RollNSandwich : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_No;
		
		private int _Quantity;
		
		private string _Item_No;
		
		private int _Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_NoChanging(int value);
    partial void OnOrder_NoChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnItem_NoChanging(string value);
    partial void OnItem_NoChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    #endregion
		
		public RollNSandwich()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order No]", Storage="_Order_No", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_No
		{
			get
			{
				return this._Order_No;
			}
			set
			{
				if ((this._Order_No != value))
				{
					this.OnOrder_NoChanging(value);
					this.SendPropertyChanging();
					this._Order_No = value;
					this.SendPropertyChanged("Order_No");
					this.OnOrder_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Item No]", Storage="_Item_No", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Item_No
		{
			get
			{
				return this._Item_No;
			}
			set
			{
				if ((this._Item_No != value))
				{
					this.OnItem_NoChanging(value);
					this.SendPropertyChanging();
					this._Item_No = value;
					this.SendPropertyChanged("Item_No");
					this.OnItem_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SaladNPasta")]
	public partial class SaladNPasta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_No;
		
		private int _Quantity;
		
		private string _Item_Name;
		
		private int _Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_NoChanging(int value);
    partial void OnOrder_NoChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnItem_NameChanging(string value);
    partial void OnItem_NameChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    #endregion
		
		public SaladNPasta()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order No]", Storage="_Order_No", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_No
		{
			get
			{
				return this._Order_No;
			}
			set
			{
				if ((this._Order_No != value))
				{
					this.OnOrder_NoChanging(value);
					this.SendPropertyChanging();
					this._Order_No = value;
					this.SendPropertyChanged("Order_No");
					this.OnOrder_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Item Name]", Storage="_Item_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Item_Name
		{
			get
			{
				return this._Item_Name;
			}
			set
			{
				if ((this._Item_Name != value))
				{
					this.OnItem_NameChanging(value);
					this.SendPropertyChanging();
					this._Item_Name = value;
					this.SendPropertyChanged("Item_Name");
					this.OnItem_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Deals")]
	public partial class Deal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_Number;
		
		private int _Quantity;
		
		private string _Name_;
		
		private int _Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_NumberChanging(int value);
    partial void OnOrder_NumberChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnName_Changing(string value);
    partial void OnName_Changed();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    #endregion
		
		public Deal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order Number]", Storage="_Order_Number", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_Number
		{
			get
			{
				return this._Order_Number;
			}
			set
			{
				if ((this._Order_Number != value))
				{
					this.OnOrder_NumberChanging(value);
					this.SendPropertyChanging();
					this._Order_Number = value;
					this.SendPropertyChanged("Order_Number");
					this.OnOrder_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Name ]", Storage="_Name_", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name_
		{
			get
			{
				return this._Name_;
			}
			set
			{
				if ((this._Name_ != value))
				{
					this.OnName_Changing(value);
					this.SendPropertyChanging();
					this._Name_ = value;
					this.SendPropertyChanged("Name_");
					this.OnName_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
